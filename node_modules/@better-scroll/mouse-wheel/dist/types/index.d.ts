import BScroll from '@better-scroll/core';
import { ApplyOrder } from '@better-scroll/shared-utils';
export declare type mouseWheelOptions = Partial<MouseWheelConfig> | boolean | undefined;
export interface MouseWheelConfig {
    speed?: number;
    invert?: boolean;
    easeTime?: number;
    throttle?: number;
    debounce?: number;
}
declare module '@better-scroll/core' {
    interface Options {
        /**
         * for mouse wheel
         * mouseWheel: {
         *   speed: 20,
         *   invert: false,
         *   easeTime: 0,
         *   debounce: 0,
         *   throttle: 400
         * }
         */
        mouseWheel?: mouseWheelOptions;
    }
}
interface CompatibleWheelEvent extends WheelEvent {
    pageX: number;
    pageY: number;
    readonly wheelDeltaX: number;
    readonly wheelDeltaY: number;
    readonly wheelDelta: number;
}
export default class MouseWheel {
    scroll: BScroll;
    static pluginName: string;
    static applyOrder: ApplyOrder;
    mouseWheelOpt: Partial<MouseWheelConfig>;
    private eventRegistor;
    private wheelEndTimer;
    private wheelMoveTimer;
    private wheelStart;
    private deltaCache;
    private hooksFn;
    constructor(scroll: BScroll);
    destroy(): void;
    registorEvent(): void;
    wheelHandler(e: CompatibleWheelEvent): void;
    private wheelStartHandler;
    private wheelStopDetactor;
    private getWheelDelta;
    private beforeHandler;
    private wheelMove;
    private registorHooks;
    private getEaseTime;
}
export {};
